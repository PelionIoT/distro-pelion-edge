#!/usr/bin/perl

=head1 USAGE

goenv.guess ARCH

Convert a debian or gnu-style architecture string to a set of Go
environment variables that affect cross compiling.

=cut

use strict;
use Pod::Usage;

my $me = "goenv.guess";
my $pattern;

foreach (@ARGV) {
	if ($_ eq "-h") {
		pod2usage 0;
	} elsif (/^-/) {
		pod2usage "$me: unknown argument: $_\n";
	} else {
		$pattern = $_;
	}
}

unless ($pattern) {
	pod2usage "$me: argument expected\n";
}

my $state = \&look_up;
while (<DATA>) {
	$state = &$state($_);
	exit unless $state;
}

sub look_up {
	$_ = shift;
	return \&look_up if /^\t/;

	my ($re, $arch) = split;
	return \&look_up unless $pattern =~ /^$re$/;

	print "export GOARCH=$arch\n";
	return \&fine_tune;
}

sub fine_tune {
	$_ = shift;

	if (/^\t(.*)/) {
		print "export $1\n";
		return \&fine_tune;
	}
}

print STDERR "$me: architecture `$pattern' is not recognized and is probably not supported\n";
print "export GOARCH=$pattern\n";

__DATA__
(i[34567]86|pentium) 386
(amd64|x86_64)       amd64
(aarch|arm)64        arm64
arm.*b               armbe
armel                arm
	GOARM=5
arm.*                arm
	GOARM=7
mips(eb)?            mips
mipsel               mipsle
mips64               mips64
mips64el             mips64le
(powerpc|ppc)        ppc
(powerpc|ppc)64      ppc64
powerpc64le          ppc64le
sparc                sparc
sparc64              sparc64
