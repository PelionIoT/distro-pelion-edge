Description: replaces a syscall to eventfd by eventfd2
 Go on arm64 doesn't seem to have the constant syscall.SYS_EVENTFD,
 but it does have syscall.SYS_EVENTFD2, which is the same thing,
 but accepts one more parameter. When that parameter is set to zero,
 it behaves the same as SYS_EVENTFD.
 .
 Actually, using SYS_EVENTFD in this case is incorrect as it does
 not accept the second parameter with flags. This patch replaces
 the call for all architectures.
Author: Vasily Smirnov <vasilii.smirnov@globallogic.com>
---
--- a/processes/wakeupfd.go
+++ b/processes/wakeupfd.go
@@ -77,7 +77,7 @@ func (this *WakeupFd) ReadWakeup() (ret
 // eventfd() is Linux specific
 // C def: int eventfd(unsigned int initval, int flags);
 func eventfd(initval uint, flags int) (fd int, errno error) {
-	val, _, err := syscall.RawSyscall(syscall.SYS_EVENTFD,
+	val, _, err := syscall.RawSyscall(syscall.SYS_EVENTFD2,
 		uintptr(initval),
 		uintptr(flags),
 		0)
