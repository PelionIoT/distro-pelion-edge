unixLogSocket: /tmp/grease.socket
sysLogSocket: /run/systemd/journal/syslog
linuxKernelLog: false
httpUnixSocket: /tmp/maestroapi.sock
configDBPath: /var/lib/pelion/etc/maestroConfig.db
imagePath: /tmp/maestro/images
scratchPath: /tmp/maestro/scratch
clientId: "{{ARCH_SERIAL_NUMBER}}"
network:
  disable: true
platform_readers:
  - platform: "fsonly"
    params:
      identityPath: "/var/lib/pelion/edge_gw_config/identity.json"
var_defs:
  - key: "TMP_DIR"
    value: "/tmp"
  - key: "WIGWAG_NODE_PATH"
    value: "/usr/lib/pelion/devicejs-core-modules/node_modules"
  - key: "WIGWAG_DIR"
    value: "/usr/lib/pelion"
  - key: "NODE_EXEC"
    value: "/usr/lib/pelion/bin/node"
  - key: "MAESTRO_RUNNER_DIR"
    value: "/usr/lib/pelion/devicejs-core-modules/maestroRunner"
  - key: "SSL_CERTS_PATH"
    value: "/var/lib/pelion/edge_gw_config/.ssl"
  - key: "LOCAL_DEVICEDB_PORT"
    value: 9000
  - key: "LOCAL_DATABASE_STORAGE_DIRECTORY"
    value: "/var/lib/pelion/etc/devicedb/db"
  - key: "RELAY_VERSIONS_FILE"
    value: "/etc/pelion/versions.json"
  - key: "FACTORY_VERSIONS_FILE"
    value: "/etc/pelion/factory/versions.json"
  - key: "USER_VERSIONS_FILE"
    value: "/etc/pelion/user/versions.json"
  - key: "UPGRADE_VERSIONS_FILE"
    value: "/etc/pelion/upgrade/versions.json"
mdns:
  # disable: true
  static_records:
    - name: "WigWagRelay"
      service: "_wwservices._tcp" # normally something like https or ftp
      # domain: "local"     # local is default
      interfaces: "eth0"
      not_interfaces: "Witap0"
      port: 3131
      text:
        - "wwid={{ARCH_SERIAL_NUMBER}}"
      hostname: "wigwaggateway"
    - name: "WigWagRelay_{{ARCH_SERIAL_NUMBER}}"
      service: "_wwservices._tcp" # normally something like https or ftp
      # domain: "local"     # local is default
      interfaces: "eth0"
      not_interfaces: "Witap0"
      port: 3131
      text:
        - "wwid={{ARCH_SERIAL_NUMBER}}"
      hostname: "{{ARCH_SERIAL_NUMBER}}"
#   - file: "{{TMP_DIR}}/maestro.log"
# - TTY: "console"
#   rotate:
#       max_files: 10
#       max_file_size: 10000
#       max_total_size: 100000
#       rotate_on_start: true
#   delim: "\n"
#   format_time: "[%ld:%d] "
#   format_level: "<%s> "
#   format_tag: "{%s} "
#   format_origin: "(%s) "
#   filters:
#     - levels: error
#       format_pre: "\u001B[31m"
#       format_post: "\u001B[39m"
#     - levels: debug
#       format_pre: "\u001B[36m"
#       format_post: "\u001B[39m"
# JSON file
# - file: /tmp/json-maestro.log
#   rotate:
#       max_files: 10
#       max_file_size: 10000
#       max_total_size: 100000
#       rotate_on_start: true
#   delim: "],\n"
#   format_time: "{\"time\":\"%ld:%d\"}, "
#   format_level: "{\"level\":\"%s\"}, "
#   format_tag: "{\"tag\":\"%s\"}, "
#   format_origin: "{\"origin\":\"%s\"}, "
#   format_pre_msg: "{ \"msg\":\""
#   format_post: "\"}"
#   flag_json_escape_strings: true
#   filters:
#     - levels: all
#       format_pre: "["     # you will wrap this output with { "log": [ OUTPUT ] }

#         format_post: "]}"  # I am not sure if this works
# - name: "toCloud"  # this is a special target for sending to the cloud. It must send as a JSON
#   format_time: "\"time\":\"%ld:%d\", "
#   format_level: "\"level\":\"%s\", "
#   format_tag: "\"tag\":\"%s\", "
#   format_origin: "\"origin\":\"%s\", "
#   format_pre_msg: "\"msg\":\""
#   format_post: "\"}"
#   flag_json_escape_strings: true
#   filters:
#     - levels: all
#       format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
static_file_generators:
  - name: "devicedb"
    template_file: "/etc/pelion/template/template.devicedb.conf"
    output_file: "/etc/pelion/run/devicedb.yaml"
  - name: "ca_pem"
    template: "{{ARCH_CA_CERT_PEM}}"
    output_file: "{{SSL_CERTS_PATH}}/ca.cert.pem"
  - name: "intermediate_pem"
    template: "{{ARCH_INTERMEDIATE_CERT_PEM}}"
    output_file: "{{SSL_CERTS_PATH}}/intermediate.cert.pem"
  - name: "client_key"
    template: "{{ARCH_CLIENT_KEY_PEM}}"
    output_file: "{{SSL_CERTS_PATH}}/client.key.pem"
  - name: "client_cert"
    template: "{{ARCH_CLIENT_CERT_PEM}}"
    output_file: "{{SSL_CERTS_PATH}}/client.cert.pem"
  - name: "server_key"
    template: "{{ARCH_SERVER_KEY_PEM}}"
    output_file: "{{SSL_CERTS_PATH}}/server.key.pem"
  - name: "server_cert"
    template: "{{ARCH_SERVER_CERT_PEM}}"
    output_file: "{{SSL_CERTS_PATH}}/server.cert.pem"
  - name: "ca_chain"
    template: "{{ARCH_CA_CHAIN_CERT_PEM}}"
    output_file: "{{SSL_CERTS_PATH}}/ca-chain.cert.pem"
  - name: "relayTerm"
    template_file: "/etc/pelion/template/relayTerm.template.json"
    output_file: "/etc/pelion/run/relay-term-config.json"
config_end: true
