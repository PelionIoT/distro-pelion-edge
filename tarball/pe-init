#!/bin/sh

set -e
cd "${0%/*}"

pe_root="$(pwd)"
rundir=$pe_root/var/run
logdir=$pe_root/var/log
peliondir=$pe_root/var/lib/pelion
cborfile=$pe_root/etc/mbed-edge.cbor

export PATH="$pe_root/usr/lib/pelion/developer_identity/bin:$pe_root/bin:$pe_root/usr/bin${PATH:+:$PATH}"

mkdir -p "$rundir"
mkdir -p "$logdir"

# Maestro creates these directories without executable permissions and
# later fails because of it. So we have to create them here ourselves.
mkdir -p "$peliondir"/edge_gw_config/.ssl
mkdir -p etc/pelion/run

launch() {
    local i=10
    local logfile="$logdir/$1.stdout"

    while [ "$i" -gt 0 ]; do
        if "$@" >>"$logfile" 2>>"$logfile"; then
            break
        fi

        i=$((i - 1))
        sleep 5
    done

    if [ "$i" -eq 0 ]; then
        echo "Job $1 failed. See $logfile"
        return 1
    fi
}

launch_bg() {
    launch "$@" &
    echo "$!" >"$rundir/$1.pid"
}

maestroconf=$pe_root/etc/maestro.conf
if [ ! -f "$maestroconf" ]; then
    sed "s:\b__PE_ROOT__\b:$pe_root:g" <"${maestroconf}.in" >"$maestroconf"
fi

if [ ! -f "$cborfile" ]; then
    echo >&2 "$cborfile does not exist"
    exit 1
fi

cd "$peliondir"
launch_bg edge-core-devmode --http-port 9101 --cbor-conf "$cborfile"
launch generate-identity.sh '' 9101 "$peliondir"/edge_gw_config
launch_bg maestro -config "$maestroconf"

export NODE_PATH=$pe_root/usr/lib/pelion/devicejs-core-modules/node_modules
launch_bg node "$pe_root/usr/lib/pelion/wigwag-core-modules/relay-term/src/index.js" \
    start "$pe_root/etc/pelion/run/relay-term-config.json"
